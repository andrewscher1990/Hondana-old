<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<%= javascript_include_tag "http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js" %>
<%= javascript_include_tag "json2" %>
<%= stylesheet_link_tag 'enzan' %>

<title>本棚演算</title>
<body>

<h1>本棚演算 - 本棚.orgデータマイニング</h1>

<ul>
<li>下のボタンで「<a href="/enzan?shelf=増井">増井の本棚 と類似する本棚10個</a>」のような演算式を生成すると右側に結果が表示されます。
<li>「重み」というのは演算実行結果の左側に表示される数字です。
</ul>

<div class='expression'>
<input type="button" id="delete" value="削除" />
演算式 = <span id="commandstr"></span>
</div>
<p>

<div style="float:left; width:45%;">

    <table id="buttons">
    </table>


  <h2>最近使われた演算式</h2>
  <ul id="recent">
  </ul>

</div>

<div style="float:right;width:55%">
  <div id="result">
  </div>
</div>

<script type="text/javascript">
var cururl = '<%= url_for() %>';
var commandstack = [];
var commandstrstack = [];
var commandstackind = 0;
var recentcommands = [];

var clickedinput = -1;

function execute(){
  if(commandstackind == 0){
    $('#result').text('');
    return;
  }

  $('#result').text('計算中... 少々お待ち下さい');
  //xmlhttp = createXmlHttp();
  var command = ""
  for(i=0;i<commandstackind;i++){
    command += commandstack[i];
  }
  commandstr = ""
  for(i=0;i<commandstackind;i++){
    commandstr += commandstrstack[i];
  }

  recentcommands.unshift(commandstr);

  // 最近使ったコマンドをリスト
  $('#recent').empty();	      
  for(var i=0;i<recentcommands.length;i++){
    if(i >= 10) break;
    $('#recent').append($('<li>').text(recentcommands[i]));
  }

  // 演算コマンドを発行して結果を表示
  var res = $.ajax({
    type: 'GET',
    url: '/enzan/calculate',
    data: {
      cmd: command,
    },
    async: false, // 同期
  }).responseText;
  // json.jsのparseJSON()だと何故かうまくいかない
  res = JSON.parse(res);

  $('#result').empty();
  $.each(res,function(i,s){
    if(s.name){ // 本棚
      $('#result').append($('<a>').attr('href','/enzan?shelf='+s.name).text(s.weight).attr('class','nextsearch').css('font-weight','bold'));
      $('#result').append($('<span>').text(' '));
      $('#result').append($('<a>').attr('href','/'+s.name+'/').text(s.name));
      $('#result').append($('<span>').text(' ('+s.length+'冊)'));
      $('#result').append($('<br>'));
    }
    else { // 本
      $('#result').append($('<a>').attr('href','/enzan?book='+s.title).text(s.weight).attr('class','nextsearch').css('font-weight','bold'));
      //$('#result').append($('<span>').text(s.weight+' '));
      $('#result').append($('<a>').attr('href','/'+s.shelves[0]+'/'+s.isbn).text(s.title));
      $('#result').append($('<span>').text(' ('+s.authors+')'));
      $('#result').append($('<br>'));
    }
  });
}

var buttons = [
  ['〜の本棚 ', '"#".shelves', 'name', 'top'],
  ['「〜」にマッチする本 ', '"#".books', 'name', 'top'],
  ['「〜」というデータ ', 'data("#")', 'filename', 'top'],
  ['の本のリスト ', '.books'],
  ['の本棚のリスト ', '.shelves'],
  ['と類似する本棚〜個 ', '.similarshelves(#)', 'number'],
  ['と類似する本〜冊 ', '.similarbooks(#)', 'number'],
  ['のうち重みが〜以上のもの ', '.major(#)', 'number'],
  ['と「〜」というデータの共通のもの ', '.intersection(data("#"))', 'filename'],
  ['から「〜」というデータを除いたもの ', '.remove(data("#"))', 'filename'],
  ['を「〜」というデータにセーブ。', '.save("#")', 'filename'],
];

function dispcommand(){
  var i;
  commandstr = ""
  for(i=0;i<commandstackind;i++){
    commandstr += commandstrstack[i];
  }
  if(commandstr == ''){
    commandstr = '(下のボタンを押して演算式を入力)'
    $('#commandstr').css('font-weight','normal');
    $('#commandstr').css('color','#666');
  }
  else {
    $('#commandstr').css('font-weight','bold');
    $('#commandstr').css('color','#000');
  }
  $('#commandstr').text(commandstr);
}

function del(){
  if(commandstackind > 0) commandstackind--;
  dispcommand();

  execute();
}

function clear(){
  commandstackind = 0;
  dispcommand();
}

function bookbutton(isbn,title){
  // if(commandstackind != 0) return;
  commandstackind = 0;
  commandstack[commandstackind] = '"' + isbn + '".books';
  commandstrstack[commandstackind] = '「' + title + '」という本';
  commandstackind++;
  dispcommand();
}

// <input>枠をクリックしたときボタンクリックが動かないようにする工夫
var prevfocus = -1;
var curfocus = -1;

function focusfunc(i){
  return function(){
    if(prevfocus != i){
      prevfocus = curfocus;
      curfocus = i;
    }
    else {
      prevfocus = curfocus;
      curfocus = -1;
    }
  };
}

// ボタンを押したとき呼ばれる関数
function buttonpushed(id){
  return function(e){
    if(id == curfocus){
      curfocus = -1;
      return;
    }
    paramstr = $('#param'+id).val();
    if(buttons[id][1][0] != '.'){
      clear();
    }
    s = buttons[id][1];
    if(s.match(/#/)){
      paramtype = buttons[id][2];
      if(paramtype == 'number'){
        if(! paramstr.match(/^[0-9]+$/)) return;
      }
      if(paramtype == 'filename'){
        if(paramstr.match(/["\\]/)) return;
      }
      if(paramtype == 'name'){
        if(paramstr.match(/["\\]/)) return;
      }
    }
    if(buttons[id][3]){
      if(commandstackind != 0) return;
    }
    else {
      if(commandstackind == 0) return;
    }
    s = s.replace(/#/,paramstr);
    commandstack[commandstackind] = s;
    s = buttons[id][0];
    s = s.replace(/〜/,paramstr);
    commandstrstack[commandstackind] = s;
    commandstackind++;
    dispcommand();
 
    execute(); // いきなり実行してしまう
  }
}

var i;
table = $('#buttons');
for(i=0;i<buttons.length;i++){
  desc = buttons[i];
  tr = $('<tr>');
  td = $('<td>');
  button = $('<div>');
  button.on('click',buttonpushed(i));

  s = buttons[i][0]; // 'と類似する本〜冊 ' など
  if(a = s.match(/^(.*)(〜)(.*)$/)){
    button.append($('<span>').text(a[1]+' '));
    input = $('<input>');
    input.attr('type','text');
    input.css('width','60pt');
    input.attr('id','param'+i);
    input.on('mousedown',focusfunc(i));
    button.append(input);
    button.append($('<span>').text(' '+a[3]));
  }
  else {
    button.text(s);
  }
  button.attr('class','button');
  td.append(button);
  tr.append(td);
  table.append(tr);
}

$('#param0').val("増井");
$('#param1').val("電子書籍");
$('#param2').val("test");
$('#param5').val("10");
$('#param6').val("10");
$('#param7').val("3");
$('#param8').val("test");
$('#param9').val("test");
$('#param10').val("test");

keywords = [
  '有川 浩',
  '電子書籍',
  'けいおん',
  '水木 しげる',
  '舞城 王太郎',
];
keyword = keywords[Math.round(keywords.length * Math.random())];
$('#param1').val(keyword);

$('#delete').on('click',del);

var similarshelf = '<%= params[:similarshelf] %>';
var shelf = '<%= params[:shelf] %>';
var book = '<%= params[:book] %>';

// enzan?shelf=増井 のようなリクエストがきたとき類似本棚を検索する
if(similarshelf != ''){
  $('#param0').val(similarshelf);
  buttonpushed(0)();
  buttonpushed(5)();
  execute();
}
else if(shelf != ''){ // enzan?shelf=増井
  $('#param0').val(shelf);
  buttonpushed(0)();
  execute();
}
else if(book != ''){ // enzan?book=漱石
  $('#param1').val(book);
  buttonpushed(1)();
  execute();
}

dispcommand();

</script>

</body>
</html>
